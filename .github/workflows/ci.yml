name: Build Test and Deploy

on:
  pull_request:
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev

jobs:
  Build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Git Branch Name
        uses: EthanSK/git-branch-name-action@v1
      - name: Echo the branch name
        run: echo "Branch name ${GIT_BRANCH_NAME}"
      - name: Check out code
        uses: actions/checkout@v2     
        with:
          fetch-depth: '2'
      - name: Setup conda env
        uses: conda-incubator/setup-miniconda@v2.1.1
        with: 
          miniconda-version: "latest"
          mamba-version: "*"
          use-mamba: true
          channels: conda-forge, usgs-astrogeology
          channel-priority: strict
          activate-environment: test_env
          environment-file: environment.yml
     
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Package
        run: |
          conda install pip setuptools
          conda install --quiet pytest pytest-cov nbsphinx
          python setup.py install
      - name: Check build environment
        run: |
          conda list
          conda info
      - name: Test Python Package
        run: |
          pytest --cov libpyhat --cov-report=xml
      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          verbose: false
      - name: Deploy
        if: ${{ env.GIT_BRANCH_NAME == 'master' }}

        run: |
          echo "We are on the master branch - deploying!"
          conda deactivate
          conda install conda-build anaconda-client
          conda config --set anaconda_upload yes
          pwd
          ls -a
          echo "Here is what the build command (without token) looks like:"
          echo conda build --python ${{ matrix.python-version }} recipe
          conda build --token ${{ secrets.CONDA_UPLOAD_TOKEN }} --python ${{ matrix.python-version }} recipe
              
